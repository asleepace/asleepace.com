---
import BaseHead from '@/components/astro/BaseHead.astro'
import Header from '@/components/astro/Header.astro'
import Footer from '@/components/astro/Footer.astro'
import { siteData } from '@/consts'
import { CircleUser, LockKeyholeIcon } from 'lucide-react'

export const prerender = false
export const route = '/admin/login'

// const sessionCookie = Astro.cookies?.get('session')
// const hasSessionCookie = Boolean(sessionCookie)
// const isLoggedIn = Boolean(Astro.locals.isLoggedIn && Astro.locals.user)

// if (hasSessionCookie && isLoggedIn) {
//   console.log(`GET ${route} redirecting to ADMIN_HOME ...`, Astro.request)
//   return Astro.redirect(PATH.ADMIN_HOME, 302)
// }

// if (hasSessionCookie && !isLoggedIn) {
//   Astro.cookies.delete('session', { path: COOKIE_PATH })
// }

// NOTE: Astro.redirect() is not working here for logged in users.

const error = Astro.url.searchParams.get('error')

const ERROR_CASES = {
  invalid_credentials: 'Invalid username or password.',
  invalid_password: 'Invalid password.',
  bad_content: 'Invalid content type.',
  unknown: 'An unknown error occurred: ' + error,
}

const message = error && error in ERROR_CASES ? ERROR_CASES[error] : error
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={siteData.title} description={siteData.description} />
  </head>
  <body class="min-h-screen flex flex-col bg-white">
    <Header title={siteData.title} />
    <main
      class="flex flex-col grow max-w-screen-lg justify-center items-center mx-auto p-4"
    >
      <div
        class="flex shadow-xs flex-col items-center gap-2 py-4 border-[1px] bg-white border-gray-300 rounded-2xl p-4"
      >
        <div class="flex flex-col items-center justify-center py-4">
          <LockKeyholeIcon
            className="text-neutral-300 text-shadow my-2 mb-3"
            size={34}
          />
          <p
            class="text-4xl font-semibold tracking-wider text-neutral-800 text-center"
          >
            Admin
          </p>
          <p class="text-lg tracking-wide text-center">
            {
              message ? (
                <span class="text-red-500">{message}</span>
              ) : (
                <span class="text-neutral-400">
                  {'Please login to continue'}
                </span>
              )
            }
          </p>
        </div>
        <!-- Login Form -->
        <form
          action="/api/auth"
          class="flex flex-col mt-4 gap-2 w-[300px]"
          method="post"
        >
          <div class="h-[1px] w-full bg-neutral-200"></div>

          <input
            autofocus
            class="border border-gray-300 text-center focus:ring-0 outline-none focus:border-blue-400 focus:placeholder:opacity-0 rounded-md p-2 text-sm"
            autocomplete="email"
            id="username"
            type="text"
            name="username"
            placeholder="Username"
          />
          <input
            class="border border-gray-300 text-center focus:ring-0 outline-none focus:border-blue-400 rounded-md focus:placeholder:opacity-0 p-2 text-sm"
            autocomplete="current-password"
            id="password"
            type="password"
            name="password"
            placeholder="Password"
          />
          <div class="h-[1px] w-full bg-neutral-200"></div>
          <button
            class="bg-blue-500 hover:bg-blue-400 transition-all duration-300 text-white text-sm tracking-wide rounded-xl p-3"
            type="submit">Submit</button
          >
        </form>
      </div>
    </main>
    <Footer />
  </body>
</html>
