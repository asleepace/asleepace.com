---
import type { HTMLAttributes } from 'astro/types'

type Props = HTMLAttributes<'a'>

const { href, class: className, ...props } = Astro.props

const pathname = Astro.url.pathname.replace(import.meta.env.BASE_URL, '')
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === '/' + (subpath?.[0] || '');
---

<a href={href} data-text={Astro.slots.default} class:list={[className, { active: isActive }]} {...props}>
  <slot />
</a>
<style>
  a {
    display: inline-block;
    text-decoration: none;
  }
  a::before {
    content: attr(data-text);
    font-weight: bold;
    height: 0;
    visibility: hidden;
    overflow: hidden;
    user-select: none;
    pointer-events: none;
    display: block;
  }
  a.active {
    font-weight: bolder;
    text-decoration: underline;
  }
</style>
